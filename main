import customtkinter
import tkinter as tk

customtkinter.set_appearance_mode("Dark")  # Modes: "System" (standard), "Dark", "Light"
customtkinter.set_default_color_theme("blue")  # Themes: "blue" (standard), "green", "dark-blue"

class App(customtkinter.CTk):
    def __init__(self):
        super().__init__()

        # configure window
        self.title("Calculator")
        self.geometry(f"{320}x{400}")

        # Create Entry widget to display the input and output
        self.result = customtkinter.CTkEntry(self, font=("SF Display", 30), justify="right", text_color="#ffffff", 
                                             placeholder_text="0", placeholder_text_color="#ffffff")
        self.result.grid(row=0, column=0, columnspan=4, padx=(10,10), pady=10, ipadx=70, ipady=20)

        # Create buttons for the calculator
        button_1 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="1", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(1))
        button_2 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="2", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(2))
        button_3 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="3", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(3))
        button_4 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="4", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(4))
        button_5 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="5", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(5))
        button_6 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="6", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(6))
        button_7 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="7", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(7))
        button_8 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="8", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(8))
        button_9 = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="9", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(9))
        button_0 = customtkinter.CTkButton(self, width=150, corner_radius=100, fg_color="#505050", hover_color="#6e6d6d", 
                                           text="0", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click(0))
        
        button_clear = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#D4D4D2", hover_color="#e6e6e6", 
                                               text="Clear", text_color=("#1C1C1C"), command=self.button_clear)
        button_negative = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#D4D4D2", hover_color="#e6e6e6", 
                                               text="+/-", text_color=("#1C1C1C"), command=self.button_clear)
        button_percentage = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#D4D4D2", hover_color="#e6e6e6", 
                                               text="%", text_color=("#1C1C1C"), command=self.button_percentage)
        button_divide = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                                text="/", text_color=("gray10", "#DCE4EE"), command=self.button_divide)
        
        button_decimal = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                                 text=".", text_color=("gray10", "#DCE4EE"), command=lambda: self.button_click("."))
        button_add = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                             text="+", text_color=("gray10", "#DCE4EE"), command=self.button_add)
        button_subtract = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                                  text="-", text_color=("gray10", "#DCE4EE"), command=self.button_subtract)
        button_multiply = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                                  text="*", text_color=("gray10", "#DCE4EE"), command=self.button_multiply)
        button_equal = customtkinter.CTkButton(self, width=70, corner_radius=100, fg_color="#FF9500", hover_color="#faaf46", 
                                               text="=", text_color=("gray10", "#DCE4EE"), command=self.button_equal)

        # Put the buttons on the screen
        button_clear.grid(row=1, column=0, padx=5, pady=5, ipady=10)
        button_negative.grid(row=1, column=1, padx=5, pady=5, ipady=10)
        button_percentage.grid(row=1, column=2, padx=5, pady=5, ipady=10)
        button_divide.grid(row=1, column=3, padx=5, pady=5, ipady=10)

        button_7.grid(row=2, column=0, padx=5, pady=5, ipady=10)
        button_8.grid(row=2, column=1, padx=5, pady=5, ipady=10)
        button_9.grid(row=2, column=2, padx=5, pady=5, ipady=10)
        button_multiply.grid(row=2, column=3, padx=5, pady=5, ipady=10)

        button_4.grid(row=3, column=0, padx=5, pady=5, ipady=10)
        button_5.grid(row=3, column=1, padx=5, pady=5, ipady=10)
        button_6.grid(row=3, column=2, padx=5, pady=5, ipady=10)
        button_subtract.grid(row=3, column=3, padx=5, pady=5, ipady=10)

        button_1.grid(row=4, column=0, padx=5, pady=5, ipady=10)
        button_2.grid(row=4, column=1, padx=5, pady=5, ipady=10)
        button_3.grid(row=4, column=2, padx=5, pady=5, ipady=10)
        button_add.grid(row=4, column=3, padx=5, pady=5,  ipady=10)

        button_0.grid(row=5, column=0, columnspan=2, padx=5, pady=5, ipady=10)
        button_decimal.grid(row=5, column=2, padx=5, pady=5,  ipady=10)
        button_equal.grid(row=5, column=3, padx=5, pady=5, ipady=10)

    # Function to update the input in the Entry widget
    def button_click(self, number):
        current = self.result.get()
        self.result.delete(0, tk.END)
        self.result.insert(0, str(current) + str(number))

    def button_clear(self):
        self.result.delete(0, tk.END)

    def button_add(self):
        first_number = self.result.get()
        global f_num
        global math
        math = "addition"
        f_num = float(first_number)
        self.result.delete(0, tk.END)

    def button_subtract(self):
        first_number = self.result.get()
        global f_num
        global math
        math = "subtraction"
        f_num = float(first_number)
        self.result.delete(0, tk.END)

    def button_multiply(self):
        first_number = self.result.get()
        global f_num
        global math
        math = "multiplication"
        f_num = float(first_number)
        self.result.delete(0, tk.END)

    def button_divide(self):
        first_number = self.result.get()
        global f_num
        global math
        math = "division"
        f_num = float(first_number)
        self.result.delete(0, tk.END)

    def button_percentage(self):
        first_number = self.result.get()
        global f_num
        global math
        math = "percentage"
        f_num = float(first_number)
        self.result.delete(0, tk.END)

    def button_equal(self):
        second_number = self.result.get()
        self.result.delete(0, tk.END)

        if math == "addition":
            self.result.insert(0, f_num + float(second_number))

        elif math == "subtraction":
            self.result.insert(0, f_num - float(second_number))

        elif math == "multiplication":
            self.result.insert(0, f_num * float(second_number))

        elif math == "division":
            self.result.insert(0, f_num / float(second_number))

        elif math == "percentage":
            self.result.insert(0, 100* f_num / float(second_number))

if __name__ == "__main__":
    app = App()
    app.resizable(width=False, height=False)
    app.mainloop()
    # app.bind("<Button-1>", app.button_click(1))

